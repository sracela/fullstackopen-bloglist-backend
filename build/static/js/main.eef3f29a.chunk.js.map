{"version":3,"sources":["services/auth-header.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","hooks/index.js","components/BlogForm.js","components/Blogs.js","components/Users.js","reducers/togglableReducer.js","components/Togglable.js","components/Comments.js","components/Blog.js","components/User.js","services/users.js","reducers/userReducer.js","services/login.js","reducers/auth.js","components/Login.js","components/UserWidget.js","components/Nav.js","components/Notification.js","components/Home.js","App.js","store.js","index.js"],"names":["authHeader","user","JSON","parse","window","localStorage","getItem","token","Authorization","timeoutID","baseUrl","getAll","a","axios","get","response","data","create","newObject","config","headers","post","update","id","put","comment","remove","delete","createBlog","dispatch","blogService","newBlog","type","Promise","resolve","reject","likeBlog","blogObject","likes","removeBlog","addCommentToBlog","blogReducer","state","action","blogToChange","find","n","changedBlog","map","blog","filter","comments","setNotification","message","iserror","time","clearTimeout","notification","setTimeout","notificationReducer","useField","useState","value","setValue","reset","onChange","event","target","BlogForm","useDispatch","currentUser","useSelector","auth","isShown","setIsShown","resetTitle","title","resetAuthor","author","resetURL","url","handleReset","useEffect","addBlog","console","log","Pane","Dialog","onCloseComplete","confirmLabel","TextInputField","label","placeholder","width","padding","position","Button","right","bottom","intent","appearance","onClick","BlogItem","history","useHistory","Card","key","gridArea","background","elevation","hoverElevation","activeElevation","minHeight","display","flexDirection","justifyContent","cursor","push","height","Heading","is","size","Paragraph","color","marginTop","alignItems","style","textDecoration","to","Avatar","name","username","Text","marginLeft","Small","textTransform","alignSelf","Strong","Blogs","blogs","users","maxWidth","overflowY","overflowX","length","marginBottom","Badge","backgroundColor","marginY","gridTemplateColumns","gridTemplateRows","gridAutoColumns","gridAutoFlow","listStyle","sort","b","Order","getIconForOrder","order","ArrowUpIcon","ArrowDownIcon","CaretDownIcon","Users","searchQuery","setSearchQuery","ordering","setOrdering","finalUsers","aValue","bValue","sortTable","true","false","sortedUsers","trim","filteredUsers","Table","Head","paddingY","SearchHeaderCell","TextHeaderCell","Popover","Position","BOTTOM_LEFT","content","close","Menu","OptionsGroup","options","selected","TextDropdownButton","icon","Body","index","Row","isSelectable","onSelect","Cell","fontWeight","TextCell","isNumber","togglable","visibility","Object","assign","toggleVisibility","togglableReducer","undefined","t","Togglable","props","visible","togglables","hideWhenVisible","showWhenVisible","margin","buttonLabel","className","children","top","left","iconAfter","CrossIcon","displayName","Comments","blogId","resetComment","addComment","preventDefault","newComment","e","onSubmit","ArrowRightIcon","marginX","minWidth","as","Blog","placeItems","textAlign","borderRadius","overflow","src","alt","Pill","isSolid","ThumbsUpIcon","confirm","handleRemove","TrashIcon","User","useParams","toString","totalLikes","reduce","prev","curr","totalComments","CommentIcon","userReducer","login","credentials","setItem","stringify","logout","removeItem","initialState","isLoggedIn","password","loginService","payload","Login","resetUsername","resetPassword","handleLogin","marginRight","UserWidget","Nav","paddingX","Group","Item","HomeIcon","ApplicationsIcon","UserIcon","LogOutIcon","LogInIcon","Notification","zIndex","Alert","Home","greeting","App","matchBlog","useRouteMatch","params","matchUser","userService","path","render","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eef3f29a.chunk.js","sourcesContent":["export default function authHeader() {\n  const user = JSON.parse(window.localStorage.getItem(\"user\"));\n\n  if (user && user.token) {\n    return { Authorization: \"Bearer \" + user.token };\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios'\nimport authHeader from \"./auth-header\";\nconst baseUrl = '/api/blogs'\n\n// let token = null\n// const setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObject => {\n  const config = {    headers: authHeader() ,  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst comment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment);\n  return response.data;\n};\n\n\nconst remove = async (id) => {\n  const config = {    headers: authHeader() ,  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, comment }","const initialState = \"NONE\";\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return action.notification;\n    case \"DELETE_NOTIFICATION\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nvar timeoutID;\nexport const setNotification = (message, iserror, time) => {\n  clearTimeout(timeoutID);\n  return async (dispatch) => {\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      notification: {\n        message,\n        iserror,\n      },\n    });\n    timeoutID = setTimeout(\n      () =>\n        dispatch({\n          type: \"DELETE_NOTIFICATION\",\n        }),\n      time * 1000\n    );\n  };\n};\n\n\n// export const deleteNotification = () => {\n//     return {\n//       type: 'DELETE_NOTIFICATION',\n//     }\n// }\n\nexport default notificationReducer;\n","import blogService from \"../services/blogs\";\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"NEW_BLOG\":\n      return [...state, action.data];\n    case \"INIT_BLOGS\":\n      return action.data;\n    case \"LIKE_BLOG\": {\n      const id = action.data.id;\n      const blogToChange = state.find((n) => n.id === id);\n      const changedBlog = {\n        ...blogToChange,\n        likes: blogToChange.likes + 1,\n      };\n      return state.map((blog) => (blog.id !== id ? blog : changedBlog));\n    }\n    case \"REMOVE_BLOG\": {\n      const id = action.data.id;\n      return state.filter((blog) => blog.id !== id);\n    }\n    case \"COMMENT_BLOG\": {\n      const id = action.data.id;\n      const blogToChange = state.find((n) => n.id === id);\n      const changedBlog = {\n        ...blogToChange,\n        comments: blogToChange.comments\n          ? [...blogToChange.comments, action.data.comment]\n          : [action.data.comment],\n      };\n      return state.map((blog) => (blog.id !== id ? blog : changedBlog));\n    }\n    default:\n      return state;\n  }\n}\n\nexport const createBlog = (data) => async (dispatch) => {\n  try {\n    const newBlog = await blogService.create(data);\n    dispatch({\n      type: \"NEW_BLOG\",\n      data: newBlog,\n    });\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject();\n  }\n  };\n\nexport const likeBlog = (blogObject) => async (dispatch) => {\n  try {\n    await blogService.update(blogObject.id, {\n      ...blogObject,\n      likes: blogObject.likes + 1,\n    });\n    dispatch({\n      type: \"LIKE_BLOG\",\n      data: blogObject,\n    });\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject();\n    \n  }\n  };\n\nexport const removeBlog = (blogObject) => \n  async (dispatch) => {\n    try{\n      await blogService.remove(blogObject.id);\n      dispatch({\n        type: \"REMOVE_BLOG\",\n        data: blogObject,\n      });\n    return Promise.resolve();\n      }\n    catch (e) {\n    return Promise.reject();\n    }\n  };\n\n\nexport const addCommentToBlog = ({id, comment}) => async (dispatch) => {\n  try {\n    await blogService.comment(id, comment);\n    dispatch({\n      type: \"COMMENT_BLOG\",\n      data: {id, comment},\n    });\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject();\n  }\n};\n\nexport const initializeBlogs = () => \n  async (dispatch) => {\n    try {\n      const blogs = await blogService.getAll();\n      dispatch({\n        type: \"INIT_BLOGS\",\n        data: blogs,\n      });\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject();\n    }\n  };\n\nexport default blogReducer\n","import { useState } from \"react\";\n\nexport const useField = (type) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n    const reset = () => {\n      setValue(\"\");\n    };\n\n  return {\n    type,\n    value,\n    reset,\n    onChange,\n  };\n};\n\n// // modules can have several named exports\n// export const useAnotherHook = () => {\n//   // ...\n// };\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBlog } from \"../reducers/blogReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { useField } from \"../hooks\";\nimport { Pane, Button, Dialog, TextInputField } from \"evergreen-ui\";\n\nconst BlogForm = () => {\n  const dispatch = useDispatch();\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [isShown, setIsShown] = useState(false);\n\n  const { reset: resetTitle, ...title } = useField(\"text\");\n  const { reset: resetAuthor, ...author } = useField(\"text\");\n  const { reset: resetURL, ...url } = useField(\"text\");\n\n  const handleReset = () => resetTitle(resetAuthor(resetURL()));\n\n  useEffect(handleReset, [isShown]);\n\n  const addBlog = async (event) => {\n    console.log(\"🚀 ~ file: BlogForm.js ~ line 23 ~ addBlog ~ event\", event);\n    const newBlog = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n      user: currentUser,\n    };\n    try {\n      await dispatch(createBlog(newBlog));\n      dispatch(\n        setNotification(`New blog \"${newBlog.title}\" created`, false, 3)\n      );\n      handleReset();\n      setIsShown(false);\n    } catch (e) {\n      dispatch(setNotification(`Error creating new blog`, true, 3));\n      handleReset();\n      setIsShown(false);\n    }\n  };\n\n  return (\n    <Pane>\n      <Dialog\n        isShown={isShown}\n        title=\"New Blog\"\n        onCloseComplete={addBlog}\n        confirmLabel=\"ADD BLOG\"\n      >\n        <form>\n          <TextInputField\n            label=\"Title\"\n            placeholder=\"The best blog ever\"\n            {...title}\n          />\n          <br />\n          <br />\n          <TextInputField\n            label=\"Author\"\n            placeholder=\"The best writer ever\"\n            {...author}\n          />\n          <br />\n          <br />\n          <TextInputField label=\"URL\" placeholder=\"fantasti.co\" {...url} />\n          <br />\n          <br />\n        </form>\n      </Dialog>\n      <Pane width=\"100%\" padding={32} position=\"relative\">\n        <Button\n          position=\"absolute\"\n          right={\"0%\"}\n          bottom={16}\n          intent=\"warning\"\n          appearance=\"primary\"\n          onClick={() => setIsShown(true)}\n        >\n          CREATE NEW BLOG\n        </Button>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default BlogForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BlogForm from \"./BlogForm\";\nimport {\n  Heading,\n  Pane,\n  Card,\n  Avatar,\n  Text,\n  Badge,\n  Paragraph,\n  Small,\n  Strong,\n} from \"evergreen-ui\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const BlogItem = ({ blog }) => {\n  const history = useHistory();\n  return (\n    // <Link style={{ textDecoration: \"none\" }} to={`/blogs/${blog.id}`}>\n    <Card\n      key={blog.id}\n      // boxShadow=\"rgba(149, 157, 165, 0.2) 0px 8px 24px\"\n      gridArea= \"span 1 / span 1\"\n      background=\"white\"\n      elevation={3}\n      hoverElevation={4}\n      activeElevation={4}\n      padding={24}\n      width={274}\n      minHeight={230}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      position=\"relative\"\n      cursor=\"pointer\"\n      onClick={() => history.push(`/blogs/${blog.id}`)}\n    >\n      <Pane\n        height={102}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Heading is=\"h4\" size={600}>\n          {blog.title}\n        </Heading>\n        <Paragraph color=\"muted\" marginTop={8}>\n          Created by: {blog.author}\n        </Paragraph>\n      </Pane>\n      <Pane\n        height={18}\n        display=\"flex\"\n        justifyContent=\"flex-start\"\n        alignItems=\"center\"\n      >\n        {blog.user && (\n          <>\n            <Link\n              style={{ textDecoration: \"none\" }}\n              to={`/users/${blog.user.id}`}\n            >\n              <Avatar name={blog.user.username} size={30} />\n            </Link>\n            <Link\n              style={{ textDecoration: \"none\" }}\n              to={`/users/${blog.user.id}`}\n            >\n              <Text color=\"info\" marginLeft={8}>\n                <Small textTransform=\"uppercase\">{blog.user.username}</Small>\n              </Text>\n            </Link>\n          </>\n        )}\n      </Pane>\n\n      <Text\n        color=\"dark\"\n        marginLeft={8}\n        alignSelf=\"end\"\n        position=\"absolute\"\n        right={\"0%\"}\n        bottom={\"0%\"}\n        padding={24}\n      >\n        <Strong>{blog.likes} likes</Strong>\n      </Text>\n    </Card>\n    // </Link>\n  );\n};\n\nconst Blogs = () => {\n  const blogs = useSelector((state) => state.blogs);\n  const users = useSelector((state) => state.users);\n\n  return (\n    <Pane\n      padding={8}\n      display=\"flex\"\n      flexDirection=\"column\"\n      height=\"100%\"\n      maxWidth=\"1000px\"\n      overflowY=\"hidden\"\n      overflowX=\"hidden\"\n    >\n      <Pane display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Pane>\n          <Heading size={700}>All Blogs</Heading>\n          <Heading size={100} marginTop=\"default\">\n            {users.length} USERS\n          </Heading>\n        </Pane>\n        <Pane marginTop=\"20px\">\n          <Paragraph>{blogs.length} Total Blogs</Paragraph>\n          <Paragraph marginTop=\"default\" marginBottom=\"default\">\n            <Link style={{ textDecoration: \"none\" }} to=\"/users\">\n              <Badge color=\"red\">VIEW USERS</Badge>\n            </Link>\n          </Paragraph>\n        </Pane>\n      </Pane>\n      <Pane backgroundColor=\"#E4E7EB\" height=\"0.25px\" />\n      <Pane marginY={32} width=\"100%\">\n        <BlogForm />\n      </Pane>\n      <Pane\n        display=\"grid\"\n        height=\"100%\"\n        gridTemplateColumns={`repeat(${blogs.length}, 30%)`}\n        gridTemplateRows=\"repeat(2, 50%)\"\n        gridAutoColumns=\"15%\"\n        gridAutoFlow=\"column\"\n        listStyle=\"none\"\n        alignItems=\"start\"\n        overflowX=\"auto\"\n      >\n        {blogs\n          .sort((a, b) => b.likes - a.likes)\n          .map((blog) => (\n            <BlogItem key={blog.id} blog={blog} />\n          ))}\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Blogs;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { filter } from 'fuzzaldrin-plus';\nimport { Pane, Table, Heading, Paragraph, Avatar, Text, Popover, Position, Menu, TextDropdownButton, ArrowUpIcon, ArrowDownIcon, CaretDownIcon } from \"evergreen-ui\";\n\nconst Order = {\n  NONE: \"NONE\",\n  ASC: \"ASC\",\n  DESC: \"DESC\",\n};\n\nconst getIconForOrder = (order) => {\n  switch (order) {\n    case Order.ASC:\n      return ArrowUpIcon;\n    case Order.DESC:\n      return ArrowDownIcon;\n    default:\n      return CaretDownIcon;\n  }\n};\n\nconst Users = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [ordering, setOrdering] = useState(Order.NONE);\n  const history = useHistory()\n  const users = useSelector((state) => state.users);\n  const filteredUsers = (users) => {\n    if (searchQuery === \"\") {\n      return users\n    }\n    return users.filter(user => {\n      // Use the filter from fuzzaldrin-plus to filter by name.\n      const result = filter([user.name], searchQuery.trim())\n      return result.length === 1\n    })\n  }\n  const sortedUsers = (users) => {\n    if (ordering === Order.NONE ) {\n      return users\n    }\n     return users.sort((a, b) => {\n      let aValue = a.blogs.length\n      let bValue = b.blogs.length\n\n      // Support string comparison\n      const sortTable = { true: 1, false: -1 }\n\n      // Order ascending (Order.ASC)\n      if (ordering === Order.ASC) {\n        return aValue === bValue ? 0 : sortTable[aValue > bValue]\n      }\n\n      // Order descending (Order.DESC)\n      return bValue === aValue ? 0 : sortTable[bValue > aValue]\n    }) \n  }\n  const finalUsers = sortedUsers(filteredUsers(users))\n  \n    return (\n      <Pane padding={8} display=\"flex\" flexDirection=\"column\">\n        <Pane display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Pane>\n            <Heading size={700}>All Users</Heading>\n            <Heading size={100} marginTop=\"default\">\n              Click on User's Row in order to see it in more detail\n            </Heading>\n          </Pane>\n          <Pane marginTop=\"20px\">\n            <Paragraph>{users.length} Total Users</Paragraph>\n          </Pane>\n        </Pane>\n        <Pane>\n          <Table marginY={32} background=\"white\" elevation={3}>\n            <Table.Head paddingY={32}>\n              <Table.SearchHeaderCell\n                onChange={(value) => setSearchQuery(value)}\n                value={searchQuery}\n              />\n              <Table.TextHeaderCell>ID</Table.TextHeaderCell>\n              <Table.TextHeaderCell>Username</Table.TextHeaderCell>\n              <Table.TextHeaderCell>\n                <Popover\n                  position={Position.BOTTOM_LEFT}\n                  content={({ close }) => (\n                    <Menu>\n                      <Menu.OptionsGroup\n                        title=\"Order\"\n                        options={[\n                          { label: \"Ascending\", value: Order.ASC },\n                          { label: \"Descending\", value: Order.DESC },\n                        ]}\n                        selected={ordering}\n                        onChange={(value) => {\n                          setOrdering(value);\n                          // Close the popover when you select a value.\n                          close();\n                        }}\n                      />\n                    </Menu>\n                  )}\n                >\n                  <TextDropdownButton icon={getIconForOrder(ordering)}>\n                    Added blogs\n                  </TextDropdownButton>\n                </Popover>\n              </Table.TextHeaderCell>\n            </Table.Head>\n            <Table.Body>\n              {finalUsers.map((user, index) => (\n                <Table.Row\n                  key={user.id}\n                  isSelectable\n                  onSelect={() => history.push(`/users/${user.id}`)}\n                >\n                  <Table.Cell display=\"flex\" alignItems=\"center\">\n                    <Avatar name={user.name} />\n                    <Text marginLeft={8} size={300} fontWeight={500}>\n                      {user.name}\n                    </Text>\n                  </Table.Cell>\n                  <Table.TextCell>{user.id}</Table.TextCell>\n                  <Table.TextCell>{user.username}</Table.TextCell>\n                  <Table.TextCell isNumber>{user.blogs.length}</Table.TextCell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </Pane>\n      </Pane>\n    );\n}\n\nexport default Users;","const togglable = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_TOGGLABLE\":\n      return {\n        id: action.id,\n        visibility: false,\n      };\n    case \"SET_VISIBLE\":\n      if (state.id !== action.id) {\n        return state;\n      }\n      return Object.assign({}, state, {\n        visibility: !state.visibility,\n      });\n    default:\n      return state;\n  }\n};\n\nconst togglableReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TOGGLABLE\":\n      return [...state, togglable(undefined, action)];\n    case \"SET_VISIBLE\":\n      return state.map((t) => togglable(t, action));\n    default:\n      return state;\n  }\n};\n\nexport const addTogglable = (id) => {\n  return {\n    type: \"ADD_TOGGLABLE\",\n    id,\n  };\n};\n\n\nexport const toggleVisibility = (id) => {\n  return {\n      type: \"SET_VISIBLE\",\n      id\n  };\n};\n\nexport default togglableReducer;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTogglable, toggleVisibility } from \"../reducers/togglableReducer\";\nimport { Pane, Button, CrossIcon } from \"evergreen-ui\";\n\nconst Togglable = (props) => {\n  const dispatch = useDispatch();\n  const visible = useSelector((state) =>\n    state.togglables.find((a) => a.id === props.id)\n  )?.visibility;\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  useEffect(() => {\n    const onAddTogglable = () => dispatch(addTogglable(props.id));\n    onAddTogglable();\n  }, [dispatch, props.id]);\n\n  return (\n    <Pane position=\"relative\" width=\"100%\">\n      <Pane style={hideWhenVisible}>\n        <Button margin={8} onClick={() => dispatch(toggleVisibility(props.id))}>\n          {props.buttonLabel}\n        </Button>\n      </Pane>\n      <Pane style={showWhenVisible} className=\"togglableContent\">\n        <Pane position=\"absolute\" width=\"100%\" \n          margin={8}>\n          {props.children}\n        </Pane>\n        <Button\n          position=\"absolute\"\n          top=\"10%\"\n          left=\"0%\"\n          onClick={() => dispatch(toggleVisibility(props.id))}\n          iconAfter={<CrossIcon />}\n        >\n          CLOSE\n        </Button>\n      </Pane>\n    </Pane>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","import React from \"react\";\nimport { useField } from \"../hooks\";\nimport { useDispatch } from \"react-redux\";\nimport { addCommentToBlog } from \"../reducers/blogReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport Togglable from \"./Togglable\";\nimport {\n  Card,\n  Heading,\n  Pane,\n  TextInputField,\n  ArrowRightIcon,\n  Button,\n  Paragraph,\n} from \"evergreen-ui\";\n\nconst Comments = ({ blogId, comments }) => {\n  const dispatch = useDispatch();\n  const { reset: resetComment, ...comment } = useField(\"text\");\n  const addComment = async (event) => {\n    event.preventDefault();\n    const newComment = { id: blogId, comment: comment.value };\n    try {\n      dispatch(addCommentToBlog(newComment));\n      dispatch(\n        setNotification(`New coment \"${newComment.comment}\" added`, false, 3)\n      );\n      resetComment();\n    } catch (e) {\n      dispatch(setNotification(`Error commenting the blog!`, true, 3));\n    }\n  };\n  return (\n    <Pane width=\"100%\">\n      <Heading size={600}>Comments ({comments.length})</Heading>\n\n      <form onSubmit={addComment}>\n        <Pane display=\"flex\" width=\"100%\" marginTop={16}>\n          <TextInputField\n            width=\"75%\"\n            placeholder=\"Type your comment\"\n            {...comment}\n          />\n          <Button\n            type=\"submit\"\n            appearance=\"primary\"\n            height={30}\n            iconAfter={ArrowRightIcon}\n            marginLeft={8}\n            marginTop={4}\n          >\n            ADD\n          </Button>\n        </Pane>\n      </form>\n\n      <Togglable buttonLabel=\"Show comments\" id={\"comments\"}>\n        <Pane width=\"100%\" marginTop={8} \n        display=\"grid\"\n        height=\"100%\"\n        gridTemplateColumns={`repeat(${comments.length}, 30%)`}\n        gridTemplateRows=\"repeat(1, 10%)\"\n        gridAutoColumns=\"15%\"\n        gridAutoFlow=\"column\"\n        listStyle=\"none\"\n        alignItems=\"start\"\n        overflowX=\"auto\">\n          {comments.length !== 0 ? (\n            comments.map((comment, index) => (\n              <Card\n                marginY={8}\n                marginX={32}\n                minWidth=\"200px\"\n                minHeight=\"50px\"\n                elevation={3}\n                padding={0}\n                background=\"white\"\n                key={`comment_${index}`}\n                display=\"flex\"\n              >\n                <Pane width=\"5px\" background=\"purple\" height=\"100%\"></Pane>\n                <Pane margin={8}>\n                  <Heading as=\"h5\" size={400}>\n                    Comment {index}\n                  </Heading>\n                  <Paragraph>{comment}</Paragraph>\n                </Pane>\n              </Card>\n            ))\n          ) : (\n            <Card>\n              <Paragraph>no comments for this blog</Paragraph>\n            </Card>\n          )}\n        </Pane>\n      </Togglable>\n    </Pane>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { likeBlog, removeBlog } from \"../reducers/blogReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport Comments from \"./Comments\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  Heading,\n  Pane,\n  Strong,\n  Avatar,\n  Paragraph,\n  TrashIcon,\n  Badge,\n  Pill,\n  ThumbsUpIcon,\n} from \"evergreen-ui\";\n\nconst Blog = ({ blog }) => {\n  const dispatch = useDispatch();\n  if (!blog) {\n    return (\n      <Card\n        elevation={3}\n        margin=\"auto\"\n        background=\"white\"\n        width={500}\n        height={500}\n        display=\"grid\"\n        placeItems=\"center\"\n      >\n        <Heading size={100} textAlign=\"center\">\n          no data\n        </Heading>\n      </Card>\n    );\n  }\n\n  const handleLike = (blogObject) => async () => {\n    try {\n      await dispatch(likeBlog(blogObject));\n      dispatch(setNotification(`Like!`, false, 3));\n    } catch (e) {\n      dispatch(setNotification(`Error liking the blog!`, true, 3));\n    }\n  };\n\n  const handleRemove = (blogObject) => async () => {\n    if (window.confirm(`Do you really want to remove ${blogObject.title}?`)) {\n      try {\n        await dispatch(removeBlog(blogObject));\n        dispatch(setNotification(`Remove!`, false, 3));\n      } catch (e) {\n        dispatch(setNotification(`Error removing the blog!`, true, 3));\n      }\n    }\n  };\n  return (\n    <Pane\n      padding={8}\n      display=\"flex\"\n      flexDirection=\"column\"\n      id={blog.id}\n    >\n      <Card\n        elevation={3}\n        margin=\"auto\"\n        background=\"white\"\n        textAlign=\"center\"\n        height={500}\n        position=\"relative\"\n      >\n        <Pane borderRadius={4} height={500} overflow=\"hidden\">\n          <img src={\"../calm.jpg\"} width=\"100%\" height=\"100%\" alt=\"Blog\" />\n        </Pane>\n\n        <Card\n          elevation={3}\n          margin=\"auto\"\n          background=\"white\"\n          textAlign=\"center\"\n          height={250}\n          width=\"90%\"\n          position=\"absolute\"\n          top=\"45%\"\n          right=\"5%\"\n          hoverElevation={4}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"flex-start\"\n          justifyContent=\"space-between\"\n          padding={16}\n        >\n          <Pane textAlign=\"left\">\n            <Badge color=\"purple\">Coding</Badge>\n            <Heading is=\"h3\" size={700} marginTop={8}>\n              {blog.title}\n            </Heading>\n          </Pane>\n          <Pane alignSelf=\"center\">\n            <Heading size={100} color=\"red\">\n              <Pill display=\"inline-flex\" margin={8} color=\"red\" isSolid>\n                {blog.likes}\n              </Pill>\n              LIKES\n            </Heading>\n          </Pane>\n          <Pane\n            textAlign=\"center\"\n            display=\"flex\"\n            justifyContent=\"space-around\"\n            marginX=\"auto\"\n            width=\"100%\"\n          >\n            <Pane>\n              <Paragraph size={400} color=\"muted\">\n                Created by:\n              </Paragraph>\n              <Paragraph>\n                <Strong>{blog.author}</Strong>\n              </Paragraph>\n            </Pane>\n            <Pane>\n              <Paragraph size={400} color=\"muted\">\n                It can be visited at\n              </Paragraph>\n              <Paragraph>\n                <Strong>{blog.url}</Strong>\n              </Paragraph>\n            </Pane>\n          </Pane>\n\n          <Pane width=\"100%\" display=\"flex\" justifyContent=\"center\">\n            <Badge\n              height={32}\n              width={32}\n              padding={8}\n              borderRadius=\"100%\"\n              color=\"red\"\n              cursor=\"pointer\"\n              onClick={handleLike(blog)}\n            >\n              <ThumbsUpIcon />\n            </Badge>\n\n            <Badge\n              height={32}\n              width={32}\n              padding={8}\n              marginLeft={8}\n              borderRadius=\"100%\"\n              cursor=\"pointer\"\n              color=\"blue\"\n              onClick={handleRemove(blog)}\n            >\n              <TrashIcon />\n            </Badge>\n          </Pane>\n\n          <Pane\n            color=\"dark\"\n            marginLeft={8}\n            alignSelf=\"end\"\n            position=\"absolute\"\n            right={\"0%\"}\n            top={\"0%\"}\n            padding={16}\n            display=\"flex\"\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n          >\n            {blog.user && (\n              <>\n                <Link\n                  style={{ textDecoration: \"none\" }}\n                  to={`/users/${blog.user.id}`}\n                >\n                  <Avatar name={blog.user.username} size={36} />\n                </Link>\n              </>\n            )}\n          </Pane>\n        </Card>\n      </Card>\n      <Pane marginTop={32}>\n        <Comments blogId={blog.id} comments={blog.comments} />\n      </Pane>\n    </Pane>\n  );\n};\nexport default Blog;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { BlogItem } from \"./Blogs\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Pane,\n  Strong,\n  Avatar,\n  Badge,\n  CommentIcon,\n  ThumbsUpIcon,\n} from \"evergreen-ui\";\n\nconst User = () => {\n  const users = useSelector((state) => state.users);\n  const blogs = useSelector((state) => state.blogs);\n  const id = useParams().id;\n  const user = users.find((n) => n.id === id.toString());\n  console.log(\"🚀 ~ file: User.js ~ line 21 ~ User ~ user\", user);\n  if (!user) {\n    return (\n      <Card\n        elevation={3}\n        margin=\"auto\"\n        background=\"white\"\n        width={500}\n        height={500}\n        display=\"grid\"\n        placeItems=\"center\"\n      >\n        <Heading size={100} textAlign=\"center\">\n          no data\n        </Heading>\n      </Card>\n    );\n  }\n\n  const totalLikes = user.blogs.reduce((prev, curr) => {\n    const blog = blogs.find((blog) => blog.id === curr.id);\n    return prev + blog.likes;\n  }, 0);\n\n  const totalComments = user.blogs.reduce((prev, curr) => {\n    const blog = blogs.find((blog) => blog.id === curr.id);\n    return prev + blog.comments.length;\n  }, 0);\n\n  return (\n    <Pane padding={8} display=\"flex\" flexDirection=\"column\" \n      height=\"100%\"\n      maxWidth=\"1000px\"\n      overflowY=\"hidden\"\n      overflowX=\"hidden\">\n      <Card\n        elevation={3}\n        marginX=\"auto\"\n        background=\"white\"\n        textAlign=\"center\"\n        width={500}\n        height={380}\n        padding={32}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        position=\"relative\"\n        marginBottom={32}\n      >\n        <Avatar name={user?.name} size={100} />\n        <Pane alignSelf=\"center\">\n          <Heading size={600} marginTop=\"default\">\n            {user.name}\n          </Heading>\n          <Text color=\"muted\">Blog Creator</Text>\n          <Pane\n            marginTop={32}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            left=\"10%\"\n            position=\"absolute\"\n            width=\"80%\"\n          >\n            <Pane display=\"flex\" flexDirection=\"column\">\n              <Badge\n                height={32}\n                width={32}\n                padding={8}\n                borderRadius=\"100%\"\n                color=\"red\"\n              >\n                <ThumbsUpIcon />\n              </Badge>\n              <Text>\n                <Strong>{totalLikes}</Strong>\n              </Text>\n            </Pane>\n            <Pane display=\"flex\" flexDirection=\"column\">\n              <Badge\n                height={32}\n                width={32}\n                padding={8}\n                borderRadius=\"100%\"\n                color=\"blue\"\n              >\n                <CommentIcon />\n              </Badge>\n              <Text>\n                <Strong>{totalComments}</Strong>\n              </Text>\n            </Pane>\n          </Pane>\n        </Pane>\n      </Card>\n\n      <Heading marginY={32} size={700}>\n        Added blogs\n      </Heading>\n            <Pane\n        display=\"grid\"\n        height=\"400px\"\n        gridTemplateColumns={`repeat(${blogs.length}, 30%)`}\n        gridTemplateRows=\"repeat(1, 10%)\"\n        gridAutoColumns=\"15%\"\n        gridAutoFlow=\"column\"\n        listStyle=\"none\"\n        alignItems=\"start\"\n        overflowX=\"auto\"\n      >\n        {blogs\n          .sort((a, b) => b.likes - a.likes)\n          .map((blog) => (\n            <BlogItem key={blog.id} blog={blog} />\n          ))}\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default User;\n","import axios from 'axios'\nconst baseUrl = 'api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nexport default { getAll }","import userService from \"../services/users\";\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USERS\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => async (dispatch) => {\n  try {\n    const users = await userService.getAll();\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users,\n    });\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject();\n  }\n};\n\nexport default userReducer;","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  if (response.data.token) {\n    window.localStorage.setItem(\"user\", JSON.stringify(response.data));\n  }\n  return response.data\n}\n\nconst logout = () => {\n  window.localStorage.removeItem(\"user\");\n};\n\nexport default { login, logout }","import loginService from \"../services/login\";\n\nconst user = JSON.parse(window.localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case \"LOGIN_FAIL\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const login = ({ username, password }) => async (dispatch) => {\n  try {\n    const data = await loginService.login({ username, password });\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: { user: data },\n    });\n    return Promise.resolve();\n  } catch (e) {\n    dispatch({\n      type: \"LOGIN_FAIL\",\n    });\n    return Promise.reject();\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  loginService.logout();\n\n  dispatch({\n    type: \"LOGOUT\",\n  });\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { useField } from \"../hooks\";\nimport { login } from \"../reducers/auth\";\nimport {\n  useHistory,\n} from \"react-router-dom\";\nimport { Card, Heading, Paragraph, Pane, Button, TextInputField, ArrowRightIcon } from \"evergreen-ui\";\n\nconst Login = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { reset: resetUsername, ...username } = useField(\"text\");\n  const { reset: resetPassword, ...password } = useField(\"password\");\n\n  const handleReset = () => resetUsername(resetPassword());\n\n  const handleLogin = async (event) => {\n      event.preventDefault();\n    try {\n    await dispatch(login({ username: username.value, password: password.value }));\n      history.push(\"/\");\n      handleReset();\n      dispatch(setNotification(\"Succesfuly login\", false, 3));\n    } catch (exception) {\n      dispatch(setNotification(\"Wrong credentials\", true, 3));\n    }\n  };  \n\n  return (\n<Card\n        elevation={3}\n        margin=\"auto\"\n        background=\"white\"\n        textAlign=\"center\"\n        width={500}\n  >\n    <Pane> <img src={\"welcome.jpg\"} \n   width=\"100%\"  alt=\"Welcome!\"/></Pane>\n\n   <Pane padding={32}>\n    <Heading size={900}> Log-in!</Heading>\n    <Paragraph marginTop=\"default\">You are a click aside of seeing a lot of hilarious blogs from our users</Paragraph>\n    </Pane>\n    <Pane  background=\"purpleTint\" padding={32} width=\"100%\" position=\"relative\"\n        textAlign=\"left\">\n      <form onSubmit={handleLogin}>\n        <TextInputField\n  label=\"Username\"\n  placeholder=\"i.e. supersara\"\n  {...username}\n/>\n        <TextInputField\n  label=\"Password\"\n  placeholder=\"i.e. supersara\"\n  {...password}\n/>\n        <Button type=\"submit\" appearance=\"primary\" height={40} iconAfter={ArrowRightIcon} position=\"absolute\" right={\"0%\"} marginRight={32} marginBottom={32}>\n          LOG IN\n        </Button>\n        <br />\n        <br />\n      </form></Pane>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport {\n    Heading,\n    Pane,\n    Avatar,\n    Text,\n    Badge,\n} from \"evergreen-ui\";\n\nconst UserWidget = ({ currentUser }) => {\n    return (\n      <Pane\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Avatar name={currentUser.name} size={120} />\n        <Pane alignSelf=\"flex-start\" marginLeft={16}>\n          <Heading size={600} marginTop=\"default\">\n            {currentUser.name}\n          </Heading>\n          <Text color=\"muted\">Lead Designer</Text>\n          <Pane marginTop={8}>\n            <Badge color=\"green\">ONLINE</Badge>\n          </Pane>\n        </Pane>\n      </Pane>\n    );\n}\nexport default UserWidget;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../reducers/auth\";\nimport UserWidget from \"./UserWidget\"\nimport {\n  Pane,\n  Heading,\n  HomeIcon,\n  Menu,\n  UserIcon,\n  ApplicationsIcon,\n  LogOutIcon,\n  LogInIcon,\n} from \"evergreen-ui\";\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  const { isLoggedIn, user: currentUser } = useSelector((state) => state.auth);\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <nav>\n      <Pane\n        display=\"grid\"\n        gridTemplateRows=\"1fr 3fr 4fr 1fr\"\n        width=\"25vw\"\n        height=\"100%\"\n        paddingX={32}\n        paddingY={32}\n      >\n        <Heading size={700} is=\"h1\" cursor=\"pointer\" padding={0}>\n          Blog Application\n        </Heading>\n        <Pane height={200}>\n          {isLoggedIn && <UserWidget currentUser={currentUser} />}\n        </Pane>\n        <Menu>\n          <Menu.Group>\n            <Link style={{ textDecoration: \"none\" }} to=\"/\">\n              <Menu.Item icon={HomeIcon}>Home</Menu.Item>\n            </Link>\n            <Link style={{ textDecoration: \"none\" }} to=\"/blogs\">\n              <Menu.Item icon={ApplicationsIcon}>Blogs</Menu.Item>\n            </Link>\n            <Link style={{ textDecoration: \"none\" }} to=\"/users\">\n              <Menu.Item icon={UserIcon}>Users</Menu.Item>\n            </Link>\n          </Menu.Group>\n          <Pane height={200}></Pane>\n        </Menu>\n\n        <Menu.Group>\n          {isLoggedIn ? (\n            <Menu.Item onClick={onLogout} icon={LogOutIcon}>\n              LOG OUT\n            </Menu.Item>\n          ) : (\n            <Link style={{ textDecoration: \"none\" }} to=\"/login\">\n              <Menu.Item icon={LogInIcon}>LOG IN</Menu.Item>\n            </Link>\n          )}\n        </Menu.Group>\n      </Pane>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Alert } from \"evergreen-ui\";\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification);\n  if (notification === \"NONE\") {\n    return null;\n  }\n  const style = {\n    position: 'fixed',\n    top: '10px',\n    right: '0%',\n    padding: 10,\n    zIndex: 1000,\n    maxWidth: '50%'\n  };\n  // <div className=\"error\" style={{ color: error ? 'red' : 'green' }}></div>\n  return (\n    <div style={style}>\n <Alert\n    appearance=\"card\"\n    intent={notification.iserror ? \"danger\" : \"success\"} \n    title={notification.message}\n    marginBottom={32}\n  />\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport { Card, Heading, Paragraph, Pane } from \"evergreen-ui\";\n\nconst Home = ({ greeting }) => (\n\n<Card\n        elevation={3}\n        margin=\"auto\"\n        background=\"white\"\n        textAlign=\"center\"\n        width={600}\n  >\n    <Pane  > <img src={\"welcome.jpg\"} \n   width=\"100%\"  alt=\"Welcome!\"/></Pane>\n   <Pane padding={32}>\n    <Heading size={900} > Welcome to your Blog Application</Heading>\n    <Paragraph marginTop=\"default\">{greeting}</Paragraph>\n    </Pane>\n  </Card>\n);\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport Blogs from \"./components/Blogs\";\nimport Users from \"./components/Users\";\nimport Blog from \"./components/Blog\";\nimport User from \"./components/User\";\nimport { initializeBlogs } from \"./reducers/blogReducer\";\nimport { initializeUsers } from \"./reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Login from \"./components/Login\";\nimport Nav from \"./components/Nav\";\nimport { useRouteMatch, Switch, Route, Redirect } from \"react-router-dom\";\nimport Notification from \"./components/Notification\";\nimport { Pane } from \"evergreen-ui\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.auth);\n  const blogs = useSelector((state) => state.blogs);\n  const users = useSelector((state) => state.users);\n\n  const matchBlog = useRouteMatch(\"/blogs/:id\");\n  const blog = matchBlog\n    ? blogs.find((blog) => blog.id === matchBlog.params.id.toString())\n    : null;\n  const matchUser = useRouteMatch(\"/users/:id\");\n  const user = matchUser\n    ? users.find((user) => user.id === matchUser.params.id.toString())\n    : null;\n\n  useEffect(() => {\n    try {\n      dispatch(initializeBlogs());\n      dispatch(initializeUsers());\n    } catch (e) {\n      console.log(\"problem loading blogs or users\");\n    }\n  }, [dispatch]);\n\n  return (\n    <Pane display=\"flex\" width=\"100%\" height=\"100%\">\n      <Nav />\n      <Pane\n        display=\"flex\"\n        flexDirection=\"column\"\n        // background=\"#f5f5f5\"\n        background=\"purpleTint\"\n        width=\"100%\"\n        height=\"100%\"\n        paddingX={48}\n        paddingY={32}\n      >\n        <Notification />\n        <Switch>\n          <Route\n            path=\"/users/:id\"\n            render={() =>\n              isLoggedIn ? <User user={user} /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route\n            path=\"/blogs/:id\"\n            render={() =>\n              isLoggedIn ? <Blog blog={blog} /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route\n            path=\"/users\"\n            render={() => (isLoggedIn ? <Users /> : <Redirect to=\"/login\" />)}\n          />\n          <Route\n            path=\"/blogs\"\n            render={() => (isLoggedIn ? <Blogs /> : <Redirect to=\"/login\" />)}\n          />\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Home\n              greeting={\n                !isLoggedIn\n                  ? \"Please Log in to see posted Blogs\"\n                  : \"Click on blogs in the navigation bar to see available blogs\"\n              }\n            />\n          </Route>\n        </Switch>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default App;\n\n/* \nTODO: Dialog del blogs\nTODO: Back buttons\nTODO: Sesion\nTODO: fix comments scroll\n**/\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport blogReducer from \"./reducers/blogReducer\";\nimport userReducer from \"./reducers/userReducer\";\nimport togglableReducer from \"./reducers/togglableReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport auth from \"./reducers/auth\";\n\nconst reducer = combineReducers({\n  auth,\n  blogs: blogReducer,\n  togglables: togglableReducer,\n  notification: notificationReducer,\n  users: userReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport store from './store'\nimport { Pane } from 'evergreen-ui'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Pane width=\"100%\" height=\"100vh\">\n        <App />\n      </Pane>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}